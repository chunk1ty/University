@model IList<VoteSystem.Clients.MVC.ViewModels.ParticipantFillOut.ParticipantQuestionAnswerViewModel>

@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

@section styles {
    <style>
        .radio label {
            padding-left: 5px;
        }

        .my-error-class {
            color: #E74C3C;
        }
    </style>
}

@using (Html.BeginForm<ParticipantFillOutController>(c => c.FillOut(string.Empty), FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m[0].VoteSystemId)

    <div class="row">
        <div class="text-center">
            <a href="@(Url.Action<DashboardController>(c => c.Index()))" class="btn btn-dark">
                <i class="glyphicon glyphicon-arrow-left"></i>
                Обратно
            </a>
            <button class="btn btn-dark" type="submit">
                <i class="glyphicon glyphicon-floppy-disk"></i>
                Изпрати
            </button>
        </div>
    </div>

    <div class="row">
        @for (int question = 0; question < Model.Count; question++)
        {
            @Html.HiddenFor(m => m[question].HasMultipleAnswers)
            @Html.HiddenFor(m => m[question].Name)
            @Html.HiddenFor(m => m[question].Id)

            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>@Model[question].Name</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link">
                                    <i class="fa fa-chevron-up"></i>
                                </a>
                            </li>
                            <li>
                                <a class="close-link">
                                    <i class="fa fa-close"></i>
                                </a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>

                    <div class="x_content">
                        <div>
                            @Html.ValidationMessage(Model[question].Id.ToString(), new { @class = "my-error-class" })
                        </div>

                        @for (int answer = 0; answer < Model[question].Answers.Count; answer++)
                        {
                            if (Model[question].HasMultipleAnswers)
                            {
                                <div class="radio">
                                    @Html.CheckBoxFor(m => m[question].Answers[answer].IsChecked, new { @class = "flat" })

                                    @Model[question].Answers[answer].Name
                                    @Html.HiddenFor(m => m[question].Answers[answer].Id)
                                    @Html.HiddenFor(m => m[question].Answers[answer].Name)
                                </div>
                            }
                            else
                            {
                                <div class="radio">
                                    @Html.RadioButtonFor(
                                                        m => m[question].RadioGroupParticipantAnswer, 
                                                        Model[question].Answers[answer].Id, 
                                                        new { @class = "flat" })

                                    @Model[question].Answers[answer].Name
                                    @Html.HiddenFor(m => m[question].Answers[answer].Name)
                                    @Html.HiddenFor(m => m[question].Answers[answer].Id)   
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
